% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binomialBACT.R
\name{binomialBACT}
\alias{binomialBACT}
\title{Binomial counts for Bayesian Adaptive Trial}
\usage{
binomialBACT(p_control, p_treatment, N_total, lambda, lambda_time, interim_look,
  EndofStudy, prior = c(1, 1), block = 2, rand_ratio = c(1, 1),
  prop_loss_to_followup = 0.15, h0 = 0, futility_prob = 0.05,
  expected_success_prob = 0.9, prob_ha = 0.95, N_impute = 100,
  number_mcmc = 1000)
}
\arguments{
\item{p_control}{scalar. Proportion of an event under the contrl group.}

\item{p_treatment}{scalar. Proportion of an event under the treatment group.}

\item{N_total}{scalar. Total sample size}

\item{lambda}{vector. Lambda for different enrollment rates across times.}

\item{lambda_time}{vector. Same size as lambda, denote times at lambda changes.}

\item{interim_look}{vector. Sample size for interim looks,
total size not included.}

\item{EndofStudy}{scalar. Length of the study.}

\item{prior}{vector. Prior value of beta rate, beta(a0, b0)}

\item{block}{scalar. Block size for randomization to be implemented.}

\item{rand_ratio}{vector. Randomization ratio for control to treatment.
Integer values mapping the size of the block.}

\item{prop_loss_to_followup}{scalar. Proportion of loss in follow up.}

\item{h0}{scalar. treshold for comparing two proportions. default at 0.}

\item{futility_prob}{scalar. Type 1 error rate.}

\item{expected_success_prob}{scalar. Power of the study.}

\item{prob_ha}{scalar. Probability of alternative hypothesis.}

\item{N_impute}{scalar. Number of imputation for monte carlo simulation for missing data.}

\item{number_mcmc}{scalar. Number of Monte Carlo Markov Chain in sampling posterior.}
}
\value{
a list of output
}
\description{
Simulation for binomial counts for Bayesian Adaptive trial with different inputs to
             control for power, sample size, type 1 error rate, and etc.
}
\examples{
binomialBACT(p_control = 0.12, p_treatment = 0.10, N_total = 300,
             lambda = c(0.3, 1), lambda_time = c(25),
             interim_look = c(110, 140, 220, 270),
             EndofStudy = 50)

}
